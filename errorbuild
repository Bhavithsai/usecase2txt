OFError: EOF when reading a line
/codebuild/output/src2714766152/src/git-codecommit.eu-central-1.amazonaws.com/v1/repos/aws-reports/node_modules/aws-cdk-lib/core/lib/asset-staging.js:2
`),localBundling=options.local?.tryBundle(bundleDir,options),!localBundling){const assetStagingOptions={sourcePath:this.sourcePath,bundleDir,...options};switch(options.bundlingFileAccess){case bundling_1().BundlingFileAccess.VOLUME_COPY:new(asset_staging_1()).AssetBundlingVolumeCopy(assetStagingOptions).run();break;case bundling_1().BundlingFileAccess.BIND_MOUNT:default:new(asset_staging_1()).AssetBundlingBindMount(assetStagingOptions).run();break}}}catch(err){const bundleErrorDir=bundleDir+"-error";throw fs().existsSync(bundleErrorDir)&&fs().removeSync(bundleErrorDir),fs().renameSync(bundleDir,bundleErrorDir),new Error(`Failed to bundle asset ${this.node.path}, bundle output is located at ${bundleErrorDir}: ${err}`)}if(fs_1().FileSystem.isEmpty(bundleDir)){const outputDir=localBundling?bundleDir:AssetStaging.BUNDLING_OUTPUT_DIR;throw new Error(`Bundling did not produce any output. Check that content is written to ${outputDir}.`)}}calculateHash(hashType,bundling,outputDir){if(hashType==assets_1().AssetHashType.CUSTOM||hashType==assets_1().AssetHashType.SOURCE&&bundling){const hash=crypto().createHash("sha256");return hash.update(this.customSourceFingerprint??fs_1().FileSystem.fingerprint(this.sourcePath,this.fingerprintOptions)),bundling&&hash.update(JSON.stringify(bundling,sanitizeHashValue)),hash.digest("hex")}switch(hashType){case assets_1().AssetHashType.SOURCE:return fs_1().FileSystem.fingerprint(this.sourcePath,this.fingerprintOptions);case assets_1().AssetHashType.BUNDLE:case assets_1().AssetHashType.OUTPUT:if(!outputDir)throw new Error(`Cannot use \`${hashType}\` hash type when \`bundling\` is not specified.`);return fs_1().FileSystem.fingerprint(outputDir,this.fingerprintOptions);default:throw new Error("Unknown asset hash type.")}}}exports.AssetStaging=AssetStaging,_a=JSII_RTTI_SYMBOL_1,AssetStaging[_a]={fqn:"aws-cdk-lib.AssetStaging",version:"2.156.0"},AssetStaging.BUNDLING_INPUT_DIR="/asset-input",AssetStaging.BUNDLING_OUTPUT_DIR="/asset-output",AssetStaging.assetCache=new(cache_1()).Cache;function renderAssetFilename(assetHash,extension=""){return`asset.${assetHash}${extension}`}function determineHashType(assetHashType,customSourceFingerprint){const hashType=customSourceFingerprint?assetHashType??assets_1().AssetHashType.CUSTOM:assetHashType??assets_1().AssetHashType.SOURCE;if(customSourceFingerprint&&hashType!==assets_1().AssetHashType.CUSTOM)throw new Error(`Cannot specify \`${assetHashType}\` for \`assetHashType\` when \`assetHash\` is specified. Use \`CUSTOM\` or leave \`undefined\`.`);if(hashType===assets_1().AssetHashType.CUSTOM&&!customSourceFingerprint)throw new Error("`assetHash` must be specified when `assetHashType` is set to `AssetHashType.CUSTOM`.");return hashType}function calculateCacheKey(props){return crypto().createHash("sha256").update(JSON.stringify(sortObject(props),sanitizeHashValue)).digest("hex")}function sortObject(object){if(typeof object!="object"||object instanceof Array)return object;const ret={};for(const key of Object.keys(object).sort())ret[key]=sortObject(object[key]);return ret}function sanitizeHashValue(key,value){if(key==="PIP_INDEX_URL"||key==="PIP_EXTRA_INDEX_URL")try{let url=new URL(value);if(url.password)return url.password="",url.toString()}catch(e){throw e.name==="TypeError"?new Error(`${key} must be a valid URL, got ${value}.`):e}return value}function findSingleFile(directory,archiveOnly){if(!fs().existsSync(directory))throw new Error(`Directory ${directory} does not exist.`);if(!fs().statSync(directory).isDirectory())throw new Error(`${directory} is not a directory.`);const content=fs().readdirSync(directory);if(content.length===1){const file=path().join(directory,content[0]),extension=getExtension(content[0]).toLowerCase();if(fs().statSync(file).isFile()&&(!archiveOnly||ARCHIVE_EXTENSIONS.includes(extension)))return file}}function determineBundledAsset(bundleDir,outputType){const archiveFile=findSingleFile(bundleDir,outputType!==bundling_1().BundlingOutput.SINGLE_FILE);switch(outputType===bundling_1().BundlingOutput.AUTO_DISCOVER&&(outputType=archiveFile?bundling_1().BundlingOutput.ARCHIVED:bundling_1().BundlingOutput.NOT_ARCHIVED),outputType){case bundling_1().BundlingOutput.NOT_ARCHIVED:return{path:bundleDir,packaging:assets_1().FileAssetPackaging.ZIP_DIRECTORY};case bundling_1().BundlingOutput.ARCHIVED:case bundling_1().BundlingOutput.SINGLE_FILE:if(!archiveFile)throw new Error("Bundling output directory is expected to include only a single file when `output` is set to `ARCHIVED` or `SINGLE_FILE`");return{path:archiveFile,packaging:assets_1().FileAssetPackaging.FILE,extension:getExtension(archiveFile)}}}function getExtension(source){for(const ext of ARCHIVE_EXTENSIONS)if(source.toLowerCase().endsWith(ext))return ext;return path().extname(source)}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ^
Error: Failed to bundle asset OpReportsPipelineStack/ReportingLambdas/ReportLambdas/OpPatchingReports/Code/Stage, bundle output is located at /codebuild/output/src2714766152/src/git-codecommit.eu-central-1.amazonaws.com/v1/repos/aws-reports/cdk.out/asset.03e8bd4965539ffd50278b812a0edf5888204d1b2e6c6772b76786c82d2d79a0-error: Error: docker exited with status 2
--> Command: docker run --rm -u "0:0" -v "/codebuild/output/src2714766152/src/git-codecommit.eu-central-1.amazonaws.com/v1/repos/aws-reports/lib/pythonlambda/op_patching_report:/asset-input:delegated" -v "/codebuild/output/src2714766152/src/git-codecommit.eu-central-1.amazonaws.com/v1/repos/aws-reports/cdk.out/asset.03e8bd4965539ffd50278b812a0edf5888204d1b2e6c6772b76786c82d2d79a0:/asset-output:delegated" -w "/asset-input" "public.ecr.aws/sam/build-python3.12" bash -c "export PIP_INDEX_URL=*** && pip install --no-cache-dir -r requirements_lambda.txt -t /asset-output && cp -au . /asset-output"
    at AssetStaging.bundle (/codebuild/output/src2714766152/src/git-codecommit.eu-central-1.amazonaws.com/v1/repos/aws-reports/node_modules/aws-cdk-lib/core/lib/asset-staging.js:2:619)
    at AssetStaging.stageByBundling (/codebuild/output/src2714766152/src/git-codecommit.eu-central-1.amazonaws.com/v1/repos/aws-reports/node_modules/aws-cdk-lib/core/lib/asset-staging.js:1:5297)
    at stageThisAsset (/codebuild/output/src2714766152/src/git-codecommit.eu-central-1.amazonaws.com/v1/repos/aws-reports/node_modules/aws-cdk-lib/core/lib/asset-staging.js:1:2728)
    at Cache.obtain (/codebuild/output/src2714766152/src/git-codecommit.eu-central-1.amazonaws.com/v1/repos/aws-reports/node_modules/aws-cdk-lib/core/lib/private/cache.js:1:242)
    at new AssetStaging (/codebuild/output/src2714766152/src/git-codecommit.eu-central-1.amazonaws.com/v1/repos/aws-reports/node_modules/aws-cdk-lib/core/lib/asset-staging.js:1:3125)
    at new Asset (/codebuild/output/src2714766152/src/git-codecommit.eu-central-1.amazonaws.com/v1/repos/aws-reports/node_modules/aws-cdk-lib/aws-s3-assets/lib/asset.js:1:1141)
    at AssetCode.bind (/codebuild/output/src2714766152/src/git-codecommit.eu-central-1.amazonaws.com/v1/repos/aws-reports/node_modules/aws-cdk-lib/aws-lambda/lib/code.js:5:3487)
    at new Function (/codebuild/output/src2714766152/src/git-codecommit.eu-central-1.amazonaws.com/v1/repos/aws-reports/node_modules/aws-cdk-lib/aws-lambda/lib/function.js:1:10003)
    at ReportLambdasStack.addPatchingReportWithTrigger (/codebuild/output/src2714766152/src/git-codecommit.eu-central-1.amazonaws.com/v1/repos/aws-reports/lib/report-lambdas.ts:57:30)
    at new ReportLambdasStack (/codebuild/output/src2714766152/src/git-codecommit.eu-central-1.amazonaws.com/v1/repos/aws-reports/lib/report-lambdas.ts:52:10)

Subprocess exited with error 1

[Container] 2025/01/30 13:27:30.531627 Command did not exit successfully npm run cdk synth exit status 1
[Container] 2025/01/30 13:27:30.536196 Phase complete: BUILD State: FAILED
[Container] 2025/01/30 13:27:30.536209 Phase context status code: COMMAND_EXECUTION_ERROR Message: Error while executing command: npm run cdk synth. Reason: exit status 1
[Container] 2025/01/30 13:27:30.636338 Entering phase POST_BUILD
[Container] 2025/01/30 13:27:30.638564 Phase complete: POST_BUILD State: SUCCEEDED

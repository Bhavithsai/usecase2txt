# !/usr/bin/python
import os
import yaml
import sys
import csv
import datetime
import json

ACCOUNT_DATA_DIR = os.environ['ACCOUNT_DATA_DIR'] if os.environ['ACCOUNT_DATA_DIR'] else os.environ['CODEBUILD_SRC_DIR_AccountDataOutput'] 
ROOT_DIR = ACCOUNT_DATA_DIR
if not os.path.exists(ROOT_DIR):
    print('Root path does not exist!')
    sys.exit(1)
CSV_FIELDNAMES = []
CSV_REPORT = os.environ['CSV_FILE']
JSON_REPORT = os.environ['JSON_FILE']

def write_csv(acc_data):
    with open(CSV_REPORT, 'w') as csvfile:
        fieldnames = CSV_FIELDNAMES
        fieldnames.sort()
        fieldnames.append('removed')
        writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
        writer.writeheader()

        for account_type in ['prod', 'test', 'removed']:
            for line in {k:v for k,v in sorted(acc_data[account_type].items(), key=lambda item: item[1]['Creationdate'])}.values():
                line['removed'] = True if account_type == 'removed' else False
                writer.writerow(line)
    print(f'CSV report created')

def get_account_config(yamlfile):
    global CSV_FIELDNAMES
    acc_dict = None
    try:
        acc_dict = yaml.safe_load(open(yamlfile, 'r', encoding='utf8').read())
        CSV_FIELDNAMES = list(set(CSV_FIELDNAMES).union(acc_dict.keys()))
    except Exception as exp:
        print (f'Error processing {yamlfile}: {exp}')
    return acc_dict

def add_account(accounts, account_file):
    try:
        new_account = get_account_config(account_file)
        if 'removed' in account_file:
            accounts['removed'][new_account['AccountID']] = new_account
        elif 'test' in account_file:
            accounts['test'][new_account['AccountID']] = new_account
        else:
            accounts['prod'][new_account['AccountID']] = new_account
    except Exception as exp:
        print (f'Exception occured with: {account_file}: {exp}')

def main():
    account_dict = {'removed':{}, 'prod':{}, 'test': {}}
    for root, dirs, files in os.walk(os.path.join(ROOT_DIR, 'accounts_v2'), topdown=False):
        for name in files:
            if 'dryrun' in dirs:
                continue
            if 'account.yaml' == name:
                add_account(account_dict, os.path.join(root, name))
    print(f'Accounts fetched:\nProd: {len(account_dict["prod"])}\nRemoved: {len(account_dict["removed"])}')
    account_dict['GeneratedDatetime'] = f'{datetime.datetime.now().strftime("%Y-%m-%d %H:%M")}'
    with open(JSON_REPORT,'w',encoding='utf8') as jsonfile:
        jsonfile.write(json.dumps(account_dict,indent=2))
    write_csv(account_dict)

if __name__ == '__main__':
    sys.exit(main())

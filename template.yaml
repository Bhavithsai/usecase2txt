AWSTemplateFormatVersion: '2010-09-09'
Description: AWS CloudFormation template to set up a Lambda function with specified resources.

Parameters:
  BastionSecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Security Group ID for the Bastion host to allow inbound traffic.

  EC2SecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Security Group ID of the EC2 instance.

Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LambdaExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: S3AndDynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                Resource: '*'
              - Effect: Allow
                Action:
                  - dynamodb:*
                Resource: '*'

  LambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow inbound traffic from Bastion host
      VpcId: vpc-03941e18a3dde38d2  # Updated VPC ID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          SourceSecurityGroupId: !Ref BastionSecurityGroupId

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: MyLambdaFunction
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: my-lambda-deployment-bucket
        S3Key: lambda-function.zip
      Runtime: python3.9
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
        SubnetIds:
          - subnet-0370e4a97c3cc02a8  # Updated Subnet ID

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0c55b159cbfafe1f0
      InstanceType: t2.micro
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          SubnetId: subnet-0370e4a97c3cc02a8  # Updated Subnet ID
          GroupSet:
            - !Ref EC2SecurityGroupId
            - !Ref LambdaSecurityGroup

Outputs:
  LambdaFunctionName:
    Description: Name of the Lambda function
    Value: !Ref LambdaFunction

  LambdaSecurityGroupId:
    Description: Security Group ID for the Lambda function
    Value: !Ref LambdaSecurityGroup

  LambdaExecutionRoleName:
    Description: IAM Role name for Lambda execution
    Value: !Ref LambdaExecutionRole
